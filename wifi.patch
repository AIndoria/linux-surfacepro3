diff -rupN a/drivers/net/wireless/marvell/mwifiex/cfg80211.c b/drivers/net/wireless/marvell/mwifiex/cfg80211.c
--- a/drivers/net/wireless/marvell/mwifiex/cfg80211.c	2016-10-22 19:41:00.000000000 +0900
+++ b/drivers/net/wireless/marvell/mwifiex/cfg80211.c	2016-10-25 11:51:10.000000000 +0900
@@ -417,6 +417,8 @@ mwifiex_cfg80211_set_power_mgmt(struct w
 			    "info: ignore timeout value for IEEE Power Save\n");
 
 	ps_mode = enabled;
+	mwifiex_dbg(priv->adapter, ERROR, "jpw: hacking ps_mode to false\n");
+	ps_mode = 0;
 
 	return mwifiex_drv_set_power(priv, &ps_mode);
 }
diff -rupN a/drivers/net/wireless/marvell/mwifiex/pcie.c b/drivers/net/wireless/marvell/mwifiex/pcie.c
--- a/drivers/net/wireless/marvell/mwifiex/pcie.c	2016-10-22 19:41:00.000000000 +0900
+++ b/drivers/net/wireless/marvell/mwifiex/pcie.c	2016-10-25 11:56:12.000000000 +0900
@@ -1616,6 +1616,14 @@ static int mwifiex_pcie_process_cmd_comp
 
 	pkt_len = *((__le16 *)skb->data);
 	rx_len = le16_to_cpu(pkt_len);
+	if (rx_len == 0) {
+		mwifiex_dbg(adapter, ERROR,
+				    "0 byte cmdrsp\n");
+		mwifiex_map_pci_memory(adapter, skb, MWIFIEX_UPLD_SIZE,
+					   PCI_DMA_FROMDEVICE);
+		return 0;
+	}
+
 	skb_put(skb, MWIFIEX_UPLD_SIZE - skb->len);
 	skb_trim(skb, rx_len);
 	skb_pull(skb, INTF_HEADER_LEN);
@@ -2282,6 +2290,7 @@ static int mwifiex_process_pcie_int(stru
 			spin_unlock_irqrestore(&adapter->int_lock, flags);
 		}
 
+#if defined(JPW_EXPERIMENT_1)
 		if (mwifiex_pcie_ok_to_access_hw(adapter)) {
 			if (mwifiex_read_reg(adapter, PCIE_HOST_INT_STATUS,
 					     &pcie_ireg)) {
@@ -2307,6 +2316,7 @@ static int mwifiex_process_pcie_int(stru
 			adapter->int_status = 0;
 			spin_unlock_irqrestore(&adapter->int_lock, flags);
 		}
+#endif
 	}
 	mwifiex_dbg(adapter, INTR,
 		    "info: cmd_sent=%d data_sent=%d\n",
diff -rupN a/drivers/net/wireless/marvell/mwifiex/sta_cmd.c b/drivers/net/wireless/marvell/mwifiex/sta_cmd.c
--- a/drivers/net/wireless/marvell/mwifiex/sta_cmd.c	2016-10-22 19:41:00.000000000 +0900
+++ b/drivers/net/wireless/marvell/mwifiex/sta_cmd.c	2016-10-25 11:57:23.000000000 +0900
@@ -2251,7 +2251,7 @@ int mwifiex_sta_init_cmd(struct mwifiex_
 		if (ret)
 			return -1;
 
-		if (priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
+		if (0 && priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
 			/* Enable IEEE PS by default */
 			priv->adapter->ps_mode = MWIFIEX_802_11_POWER_MODE_PSP;
 			ret = mwifiex_send_cmd(priv,
@@ -2314,7 +2314,7 @@ int mwifiex_sta_init_cmd(struct mwifiex_
 	if (ret)
 		return -1;
 
-	if (!disable_auto_ds &&
+	if (0 && !disable_auto_ds &&
 	    first_sta && priv->adapter->iface_type != MWIFIEX_USB &&
 	    priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
 		/* Enable auto deep sleep */
